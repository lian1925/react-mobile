{"version":3,"sources":["webpack:///./src/util/store.js","webpack:///./src/views/home/data.js","webpack:///./src/views/home/index.js"],"names":["__webpack_require__","d","__webpack_exports__","setStore","getStore","name","content","JSON","stringify","window","sessionStorage","setItem","getItem","Loading","_react_16_7_0_react_default","a","createElement","routes","path","exact","title","page","Loadable","loader","Promise","all","e","then","bind","loading","index","router","Switch","map","route","Route","key","concat","component","className","Component"],"mappings":"6FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAGA,IAAMD,EAAW,SAACE,EAAMC,GACjBD,IACkB,iBAAZC,IACTA,EAAUC,KAAKC,UAAUF,IAE3BG,OAAOC,eAAeC,QAAQN,EAAMC,KAMhCF,EAAW,SAAAC,GACf,GAAKA,EACL,OAAOI,OAAOC,eAAeE,QAAQP,6NCbjCQ,EAAU,kBAAMC,EAAAC,EAAAC,cAAA,aAwBTC,EAAS,CACpB,CACEC,KAAM,IACNC,SACAC,MAAO,OACPC,KA3BeC,IAAS,CAC1BC,OAAQ,kBAAMC,QAAAC,IAAA,CAAAzB,EAAA0B,EAAA,GAAA1B,EAAA0B,EAAA,KAAAC,KAAA3B,EAAA4B,KAAA,eACdC,QAAShB,KA2BT,CACEK,KAAM,mBACNC,SACAC,MAAO,OACPC,KA7BoBC,IAAS,CAC/BC,OAAQ,kBAAMC,QAAAC,IAAA,CAAAzB,EAAA0B,EAAA,GAAA1B,EAAA0B,EAAA,KAAAC,KAAA3B,EAAA4B,KAAA,eACdC,QAAShB,KA6BT,CACEK,KAAM,cACNC,SACAC,MAAO,OACPC,KA9BeC,IAAS,CAC1BC,OAAQ,kBAAMC,QAAAC,IAAA,CAAAzB,EAAA0B,EAAA,GAAA1B,EAAA0B,EAAA,KAAAC,KAAA3B,EAAA4B,KAAA,eACdC,QAAShB,KA8BT,CACEK,KAAM,cACNC,SACAC,MAAO,OACPC,KAhCeC,IAAS,CAC1BC,OAAQ,kBAAMC,QAAAC,IAAA,CAAAzB,EAAA0B,EAAA,GAAA1B,EAAA0B,EAAA,KAAAC,KAAA3B,EAAA4B,KAAA,eACdC,QAAShB,KAgCT,CACEK,KAAM,oBACNC,SACAC,MAAO,OACPC,KAlCqBC,IAAS,CAChCC,OAAQ,kBAAMC,QAAAC,IAAA,CAAAzB,EAAA0B,EAAA,GAAA1B,EAAA0B,EAAA,KAAAC,KAAA3B,EAAA4B,KAAA,eACdC,QAAShB,0DCZUiB,wLASjB,IAAMC,EACJjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,KACGE,EAAOgB,IAAI,SAACC,EAAOJ,GAAR,OACVhB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CACEqB,IAAG,SAAAC,OAAWP,GACdX,MAAOe,EAAMf,MACbD,KAAMgB,EAAMhB,KACZoB,UAAWJ,EAAMb,UAKzB,OAAOP,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,kBAAkBR,SArBvBD,CAAcU","file":"9.c3fcd3a12027acac9124.js","sourcesContent":["/**\n * 存储sessionStorage\n */\nconst setStore = (name, content) => {\n  if (!name) return;\n  if (typeof content !== \"string\") {\n    content = JSON.stringify(content);\n  }\n  window.sessionStorage.setItem(name, content);\n};\n\n/**\n * 获取sessionStorage\n */\nconst getStore = name => {\n  if (!name) return;\n  return window.sessionStorage.getItem(name);\n};\n\n/**\n * 删除sessionStorage\n */\nconst removeStore = name => {\n  if (!name) return;\n  window.sessionStorage.removeItem(name);\n};\n\nexport { setStore, getStore, removeStore };\n","import Loadable from \"react-loadable\";\nimport React, { Component } from \"react\";\n\nconst Loading = () => <div />;\n\nconst collection = Loadable({\n  loader: () => import(\"@/views/collection\"),\n  loading: Loading\n});\nconst collection_word = Loadable({\n  loader: () => import(\"@/views/collection-word\"),\n  loading: Loading\n});\n\nconst learn_word = Loadable({\n  loader: () => import(\"@/views/learn-word\"),\n  loading: Loading\n});\nconst train_word = Loadable({\n  loader: () => import(\"@/views/train-word\"),\n  loading: Loading\n});\nconst share_collection = Loadable({\n  loader: () => import(\"@/views/share-collection\"),\n  loading: Loading\n});\n\nexport const routes = [\n  {\n    path: \"/\",\n    exact: true,\n    title: \"词库清单\",\n    page: collection\n  },\n  {\n    path: \"/collection-word\",\n    exact: true,\n    title: \"词库详情\",\n    page: collection_word\n  },\n  {\n    path: \"/learn-word\",\n    exact: true,\n    title: \"新学单词\",\n    page: learn_word\n  },\n  {\n    path: \"/train-word\",\n    exact: true,\n    title: \"复习单词\",\n    page: train_word\n  },\n  {\n    path: \"/share-collection\",\n    exact: true,\n    title: \"分享页面\",\n    page: share_collection\n  }\n];\n","import React, { Component } from \"react\";\nimport { TabBar, Button, NavBar, Icon } from \"antd-mobile\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Link,\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport { routes } from \"./data\";\nimport { setStore, getStore, removeStore } from \"util/store\";\n\nexport default class index extends Component {\n  componentDidMount() {\n    // let token = getStore(\"token\");\n    // if (!token) {\n    //   this.props.history.push(\"/login\");\n    // }\n  }\n\n  render() {\n    const router = (\n      <Switch>\n        {routes.map((route, index) => (\n          <Route\n            key={`route-${index}`}\n            exact={route.exact}\n            path={route.path}\n            component={route.page}\n          />\n        ))}\n      </Switch>\n    );\n    return <div className=\"home-container\">{router}</div>;\n  }\n}\n"],"sourceRoot":""}