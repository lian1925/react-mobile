{"version":3,"sources":["webpack:///./src/views/keke-chart/index.less?2a36","webpack:///./src/views/keke-chart/index.less","webpack:///./src/views/keke-chart/index.js"],"names":["content","__webpack_require__","module","i","hmr","transform","insertInto","locals","exports","push","g5dd","e","n","t","r","a","c","o","l","d","p","s","m","u","g","f","h","x","b","k","v","j","y","E","w","C","echarts","require","colorTheme","0","1","2","3","4","5","randomCount","parseInt","Math","random","index","total","option","correctCount","errorCount","_this","props","history","go","key","value","kekeTrain","this","counts","wordList","tipCountList","forEach","chartData","Object","keys","map","name","concat","chartLegend","log","tooltip","trigger","formatter","title","text","legend","data","grid","bottom","top","color","calculable","series","type","radius","center","init","document","getElementById","setOption","_this2","navBar","react__WEBPACK_IMPORTED_MODULE_13___default","createElement","antd_mobile_lib_nav_bar__WEBPACK_IMPORTED_MODULE_3___default","style","backgroundColor","mode","onLeftClick","gotoLast","leftContent","antd_mobile_lib_icon__WEBPACK_IMPORTED_MODULE_5___default","rightContent","className","collection_info","note","length","correctCell","duration","chart","id","antd_mobile_lib_button__WEBPACK_IMPORTED_MODULE_1___default","onClick","replace","Component","connect","state"],"mappings":"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","file":"8.[contenthash].js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--7-2!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/_style-loader@0.23.1@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--7-2!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--7-2!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".judge-exam {\\n  margin-top: 5px;\\n}\\n.judge-exam .am-navbar-title {\\n  color: #fff;\\n}\\n.judge-exam .content {\\n  padding: 0 20px;\\n}\\n.judge-exam .content .title {\\n  font-size: 16px;\\n  line-height: 40px;\\n  padding: 10px 10px 0px 10px;\\n  border-bottom: 1px solid #ddd;\\n}\\n.judge-exam .content .title h2 {\\n  font-weight: normal;\\n  text-align: center;\\n  line-height: 35px;\\n  border-bottom: 1px solid #ddd;\\n}\\n.judge-exam .content .title p {\\n  font-size: 14px;\\n  color: #666;\\n  margin: 0;\\n  margin-left: 5px;\\n  line-height: 30px;\\n}\\n.judge-exam .content .title p span {\\n  font-size: 12px;\\n  margin-left: 5px;\\n  color: #65d139;\\n}\\n.judge-exam .content .correct {\\n  line-height: 40px;\\n  border-bottom: 1px solid #ddd;\\n}\\n.judge-exam .content .correct span {\\n  font-size: 18px;\\n  padding: 0 5px;\\n  color: #65d139;\\n}\\n.judge-exam .content .highcharts-container,\\n.judge-exam .content #chart {\\n  width: 100%;\\n  height: 200px;\\n  border-radius: 7px;\\n}\\n.judge-exam .content .highcharts-background {\\n  background: transparent;\\n}\\n.judge-exam .content .qrcode {\\n  text-align: center;\\n}\\n\", \"\"]);\n\n// exports\n","import React, { Component } from \"react\";\n\nimport { List, NavBar, Icon, Pagination, Button, Toast } from \"antd-mobile\";\nimport { connect } from \"react-redux\"; // Expects that Highcharts was loaded in the code.\n// const QRCode = require(\"qrcode.react\");\nvar echarts = require(\"echarts\");\n\nimport \"./index.less\";\nconst colorTheme = {\n  0: \"#e84118\",\n  1: \"#00a8ff\",\n  2: \"#fbc531\",\n  3: \"#4cd137\",\n  4: \"#487eb0\",\n  5: \"#9c88ff\"\n};\nlet randomCount = parseInt(Math.random() * 10) % 5;\n\nclass index extends Component {\n  state = {\n    total: 0,\n    option: {},\n    correctCount: 0,\n    errorCount: 0\n  };\n  componentDidMount() {\n    let { kekeTrain } = this.props;\n    let { wordList, tipCountList } = kekeTrain;\n    // let\n    let counts = {};\n\n    tipCountList.forEach(function(x) {\n      counts[x] = (counts[x] || 0) + 1;\n    });\n    let chartData = Object.keys(counts).map(key => {\n      let item = {\n        value: counts[key],\n        name: `提示${key}次`\n      };\n      return item;\n    });\n\n    let chartLegend = Object.keys(counts).map(key => `提示${key}次`);\n    log(chartData, chartLegend);\n    let option = {\n      tooltip: {\n        trigger: \"item\",\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n      },\n      title: {\n        text: \"难度统计\",\n        x: \"center\"\n      },\n      legend: {\n        // orient: \"vertical\",\n        // x: \"left\",\n        // bottom: 40,\n        y: \"bottom\",\n        data: chartLegend\n      },\n      grid: { bottom: \"60px\", top: 20 },\n      color: [\"#4cd137\", \"#00a8ff\", \"#fbc531\", \"#e84118\", \"#487eb0\", \"#9c88ff\"],\n      calculable: true,\n      series: {\n        name: \"难度\",\n        type: \"pie\",\n        radius: \"55%\",\n        center: [\"50%\", \"60%\"],\n        data: chartData\n      }\n    };\n    let myChart = echarts.init(document.getElementById(\"chart\"));\n    myChart.setOption(option);\n  }\n  gotoLast = () => {\n    this.props.history.go(-1);\n  };\n  render() {\n    let { kekeTrain } = this.props;\n    log(kekeTrain);\n    const navBar = (\n      <NavBar\n        style={{\n          backgroundColor: colorTheme[randomCount],\n          color: \"#fff\"\n        }}\n        mode=\"light\"\n        onLeftClick={this.gotoLast}\n        leftContent={<Icon type=\"left\" />}\n        rightContent={[<Icon key=\"1\" type=\"ellipsis\" />]}\n      >\n        Review and learn\n      </NavBar>\n    );\n    const title = (\n      <div className=\"title\">\n        <h2>词汇总结</h2>\n        <div className=\"exam\">\n          {kekeTrain && kekeTrain.collection_info.name}\n          <p>\n            {kekeTrain && kekeTrain.collection_info.note}{\" \"}\n            <span>[{kekeTrain && kekeTrain.wordList.length}道题]</span>\n          </p>\n        </div>\n      </div>\n    );\n    const correctCell = (\n      <div className=\"correct\">\n        用时\n        <span>{this.props.kekeTrain.duration}</span>秒\n      </div>\n    );\n    const chart = (\n      <div id=\"chart\" className=\"chart\">\n        chart\n      </div>\n    );\n\n    // const qrCode = (\n    //   <div className=\"qrcode\">\n    //     <QRCode\n    //       value={kekeTrain.exam_address}\n    //       fgColor={colorTheme[randomCount]}\n    //       bgColor=\"transparent\"\n    //       size={100}\n    //     />\n    //     <p>题库地址</p>\n    //   </div>\n    // );\n    const content = (\n      <div className=\"content\">\n        {title}\n        {correctCell}\n        {chart}\n\n        {/* {qrCode} */}\n        <Button\n          onClick={() => {\n            this.props.history.replace(\"/keke-collection\");\n          }}\n        >\n          返回\n        </Button>\n      </div>\n    );\n    return (\n      <div className=\"judge-exam\">\n        {navBar}\n        {content}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  kekeTrain: state.kekeTrain\n});\nexport default connect(mapStateToProps)(index);\n"],"sourceRoot":""}